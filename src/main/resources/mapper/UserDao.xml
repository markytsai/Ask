<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 设置为IUserDao接口方法提供sql语句配置 -->
<mapper namespace="com.ilsxh.dao.UserDao">

    <select id="selectUserByUserId" resultType="User" parameterType="String">
        select user_id, email, password, join_time, username, avatar_url, gender, simple_desc, residence_place,
        position, industry, career, education, full_desc, liked_count, collected_count, follow_count,
        followed_count, scanned_count
        FROM user
        WHERE user_id = #{userId}
    </select>

    <select id="selectQuestionByQuestionId" resultType="Question">
        select `question_id`, `question_title`, `question_content`, `topic_kv_list`, `followed_count`, `scanned_count`, `create_time`, `user_id`, `answer_count`
        from question
        where
        question_id = #{questionId}
    </select>

    <select id="selectUserByUserIdWithFollowingStatus" resultType="Integer" parameterType="String">
       SELECT
            mufu.follow_status
        FROM
            mid_user_follow_user AS mufu
            inner join user as fu on mufu.user_followed_id = fu.user_id
            INNER JOIN user AS u ON u.user_id = mufu.user_id
        WHERE u.user_id = #{localUserId} and fu.user_id = #{userId}
    </select>


    <select id="selectUserIdByEmailAndPassword" resultType="com.ilsxh.vo.FirstLoginVo">
        SELECT user_id, first_login
        FROM user
        WHERE email = #{email} AND password = #{password}
    </select>

    <select id="selectUsernameByUserId" parameterType="String" resultType="String">

        SELECT username
        FROM user
        WHERE user_id = #{userId}

    </select>

    <insert id="regiterNewUser">
        insert into user(user_id, username, email, password, join_time) values(#{userId}, #{username}, #{email}, #{password}, #{joinTime});

    </insert>

    <select id="selectUserByEmail" resultType="com.ilsxh.entity.User">
        select * from user
        where email = #{email}
    </select>

    <select id="getAnswersByUserId" resultType="Answer">
        select answer_id, answer_content, liked_count, disliked_count, create_time, answer_user_id, question_id
        from answer
        where answer_user_id = #{userId}
        limit ${offSet}, ${pageSize}
    </select>

    <select id="getTotalAnswerByUserId" resultType="Integer">
        select count(*)
        from answer
        where answer_user_id = #{userId}
    </select>

    <select id="getUserFollowStatus" resultType="Integer">
        select follow_status from mid_user_follow_user where user_id = #{userId} and user_followed_id = #{userIdToBeFollowed}
    </select>

    <insert id="insertUserFollowStatus">
        insert into mid_user_follow_user(user_id, user_followed_id, follow_status, create_time) values(#{userId}, #{userIdToBeFollowed}, #{followStatus}, #{createTime});

    </insert>
    <update id="updateUserFollowStatus">
        update mid_user_follow_user set follow_status = #{followStatus}, create_time = #{createTime} where user_id = #{userId} and user_followed_id = #{userIdToBeFollowed}
    </update>

    <select id="getollowingUserByUserId" resultType="User">
        SELECT
            fu.user_id,
            fu.email,
            fu.password,
            fu.join_time,
            fu.username,
            fu.avatar_url,
            fu.gender,
            fu.simple_desc,
            fu.residence_place,
            fu.position,
            fu.industry,
            fu.career,
            fu.education,
            fu.full_desc,
            fu.liked_count,
            fu.collected_count,
            fu.follow_count,
            fu.followed_count,
            fu.scanned_count,
            mufu.follow_status
        FROM
            mid_user_follow_user AS mufu
            inner join user as fu on mufu.user_followed_id = fu.user_id
            INNER JOIN user AS u ON u.user_id = mufu.user_id
        WHERE u.user_id = #{userId} and mufu.follow_status = 1
        limit ${offset}, ${limit}
    </select>

    <select id="getTotalFollowingUserNum" resultType="Integer">
        select count(fu.user_id)
        FROM
            mid_user_follow_user AS mufu
            inner join user as fu on mufu.user_followed_id = fu.user_id
            INNER JOIN user AS u ON u.user_id = mufu.user_id
        WHERE u.user_id = #{userId} and mufu.follow_status = 1;
    </select>

    <update id="updateFirstLoginStatus">
        update user set first_login = #{firstLogin}
        where user_id = #{userId}
    </update>

    <update id="updateUsernameByUserId">
        update user set username = #{newUsername}
        where user_id = #{userId}
    </update>

    <update id="updateUserGenderByUserId">
        update user set gender = #{newGender}
        where user_id = #{userId}
    </update>

    <update id="updateUserEmailByUserId">
        update user set email = ${newEmail}
        where user_id = #{userId}
    </update>

    <update id="updateUserIndustryByUserId">
        update user set industry = #{newIndustry}
        where user_id = #{userId}
    </update>

    <update id="updateUserPositionByUserId">
        update user set position = #{newPosition}
        where user_id = #{userId}
    </update>

    <update id="updateUserSimpleDescByUserId">
        update user set simple_desc = #{newSimpleDesc}
        where user_id = #{userId}
    </update>

    <update id="updateUserFullDescByUserId">
        update user set full_desc = #{newFullDesc}
        where user_id = #{userId}
    </update>
</mapper>

