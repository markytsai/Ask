<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 设置为QuestionDao接口方法提供sql语句配置 -->
<mapper namespace="com.ilsxh.dao.QuestionDao">

    <resultMap id="QuestionList" type="com.ilsxh.entity.Question">
        <id property="questionId" column="question_id"/>
        <result property="questionTitle" column="question_title"/>
        <result property="questionContent" column="question_content"/>
        <result property="followedCount" column="followed_count"/>
        <result property="scannedCount" column="scanned_count"/>
        <result property="createTime" column="create_time"/>
        <result property="userId" column="user_id"/>
        <result property="answerCount" column="answer_count"/>
        <!--<association property="user" javaType="com.ilsxh.entity.User">-->
        <!--<id property="userId" column="user_id"/>-->
        <!--<result property="username" column="username"/>-->

        <!--</association>-->
    </resultMap>

    <select id="selectFollowingQuestionByUserId" parameterType="String" resultMap="QuestionList">

        SELECT
            q.question_id,
            q.question_title,
            q.question_content,
            q.followed_count,
            q.scanned_count,
            q.create_time,
            q.user_id,
            q.answer_count
        FROM
            question AS q
            INNER JOIN mid_user_follow_question AS qum ON qum.question_id = q.question_id
        WHERE
            qum.user_id = #{userId}
    </select>


    <select id="selectAnswersByQuestionId" resultType="com.ilsxh.entity.Answer">

        select answer_id, answer_content, liked_count, disliked_count, create_time, answer_user_id
        from answer
        where question_id = #{questionId}
    </select>

    <select id="selectQuestionByQuestionId" resultType="com.ilsxh.entity.Question">

        select question_id, question_title, question_content, followed_count, scanned_count, answer_count, create_time, user_id
        from question
        where question_id = #{questionId}
    </select>

    <select id="selectRaisedQuestionByUserId" resultType="Question">
          SELECT
            question_id,
            question_title,
            question_content,
            followed_count,
            scanned_count,
            create_time,
            user_id,
            answer_count
        FROM
            question
        WHERE
            user_id = #{userId}

    </select>

    <select id="hasUserFollowQuestion" resultType="Integer">
        select count(1)
        from mid_user_follow_question
        where user_id = #{userId}
        and  question_id = #{questionId}
    </select>

    <select id="followQuestion" resultType="Integer">
        insert into mid_user_follow_question(user_id, question_id) values(#{userId}, #{questionId})
    </select>

    <select id="unfollowQuestion" resultType="Integer">
        delete from mid_user_follow_question where user_id = #{userId} and question_id = #{questionId}
    </select>


    <insert id="submitAnswer">
        insert into answer(answer_content, question_id, answer_user_id) values(#{answerContent}, #{questionId}, #{userId})
    </insert>

    <delete id="deleteAnswer">
        delete from answer where answer_id = #{answerId}
    </delete>

    <insert id="addQuestion" useGeneratedKeys="true" keyProperty="question.questionId">
        insert into question(question_title, question_content, user_id) values(#{question.questionTitle}, #{question.questionContent}, #{question.userId})
    </insert>

</mapper>

















